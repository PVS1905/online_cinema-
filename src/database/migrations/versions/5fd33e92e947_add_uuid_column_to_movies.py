"""Add uuid column to movies

Revision ID: 5fd33e92e947
Revises: 41cdafa531cf
Create Date: 2025-06-06 00:47:19.303003

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5fd33e92e947'
down_revision: Union[str, None] = '41cdafa531cf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('certifications',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('directors',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('director_movies',
    sa.Column('movie_id', sa.Integer(), nullable=False),
    sa.Column('director_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['director_id'], ['directors.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('movie_id', 'director_id')
    )
    op.add_column('movies', sa.Column('uuid', sa.UUID(), nullable=False))
    op.add_column('movies', sa.Column('year', sa.Date(), nullable=False))
    op.add_column('movies', sa.Column('time', sa.Integer(), nullable=False))
    op.add_column('movies', sa.Column('imdb', sa.Float(), nullable=False))
    op.add_column('movies', sa.Column('votes', sa.Integer(), nullable=False))
    op.add_column('movies', sa.Column('meta_score', sa.Float(), nullable=True))
    op.add_column('movies', sa.Column('certification_id', sa.Integer(), nullable=False))
    op.drop_constraint(op.f('unique_movie_constraint'), 'movies', type_='unique')
    op.create_unique_constraint('unique_movie_constraint', 'movies', ['name', 'year', 'time'])
    op.create_unique_constraint(None, 'movies', ['uuid'])
    op.create_foreign_key(None, 'movies', 'certifications', ['certification_id'], ['id'])
    op.drop_column('movies', 'date')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('movies', sa.Column('date', sa.DATE(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'movies', type_='foreignkey')
    op.drop_constraint(None, 'movies', type_='unique')
    op.drop_constraint('unique_movie_constraint', 'movies', type_='unique')
    op.create_unique_constraint(op.f('unique_movie_constraint'), 'movies', ['name', 'date'], postgresql_nulls_not_distinct=False)
    op.drop_column('movies', 'certification_id')
    op.drop_column('movies', 'meta_score')
    op.drop_column('movies', 'votes')
    op.drop_column('movies', 'imdb')
    op.drop_column('movies', 'time')
    op.drop_column('movies', 'year')
    op.drop_column('movies', 'uuid')
    op.drop_table('director_movies')
    op.drop_table('directors')
    op.drop_table('certifications')
    # ### end Alembic commands ###
